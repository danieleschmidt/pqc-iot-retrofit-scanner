# PQC IoT Retrofit Scanner Configuration Template
# Copy this file to .env and modify values as needed

# =============================================================================
# CORE CONFIGURATION
# =============================================================================

# Logging configuration
PQC_LOG_LEVEL=INFO                    # DEBUG, INFO, WARNING, ERROR, CRITICAL
PQC_LOG_FORMAT=structured             # structured, simple, json
PQC_LOG_FILE=                         # Optional: log file path

# Analysis engine settings
PQC_MAX_ANALYSIS_THREADS=4            # Number of parallel analysis threads
PQC_ANALYSIS_TIMEOUT=300              # Analysis timeout in seconds
PQC_MEMORY_LIMIT=2048                 # Memory limit in MB for analysis

# =============================================================================
# PATHS AND DIRECTORIES
# =============================================================================

# Working directories
PQC_WORK_DIR=/tmp/pqc-analysis        # Temporary analysis directory
PQC_CACHE_DIR=~/.cache/pqc-iot        # Cache directory for analysis artifacts
PQC_OUTPUT_DIR=./pqc-output           # Default output directory

# Firmware samples and test data
PQC_FIRMWARE_SAMPLES_DIR=./firmware_samples  # Sample firmware directory
PQC_TEST_VECTORS_DIR=./test_vectors          # Cryptographic test vectors

# PQC library paths
PQC_DILITHIUM_LIB_PATH=               # Optional: custom Dilithium library path
PQC_KYBER_LIB_PATH=                   # Optional: custom Kyber library path
PQC_SPHINCS_LIB_PATH=                 # Optional: custom SPHINCS+ library path

# =============================================================================
# ANALYSIS ENGINE CONFIGURATION
# =============================================================================

# Binary analysis settings
PQC_CAPSTONE_CACHE=1                  # Enable Capstone disassembly caching
PQC_LIEF_DETAILED_ANALYSIS=0          # Enable detailed LIEF binary analysis
PQC_ANGR_ANALYSIS=0                   # Enable Angr symbolic analysis (resource intensive)

# Crypto detection settings
PQC_CRYPTO_DETECTION_SENSITIVITY=medium  # low, medium, high, paranoid
PQC_MIN_CONFIDENCE_THRESHOLD=0.8      # Minimum confidence for vulnerability detection
PQC_ENABLE_HEURISTIC_DETECTION=1      # Enable heuristic crypto pattern detection

# Architecture support
PQC_SUPPORTED_ARCHITECTURES=arm,esp32,riscv,avr  # Comma-separated list
PQC_DEFAULT_ARCHITECTURE=arm          # Default when auto-detection fails

# =============================================================================
# PATCH GENERATION CONFIGURATION
# =============================================================================

# Algorithm selection
PQC_DEFAULT_SIGNATURE_ALGORITHM=dilithium2    # dilithium2, dilithium3, dilithium5, sphincs
PQC_DEFAULT_KEM_ALGORITHM=kyber512            # kyber512, kyber768, kyber1024
PQC_ENABLE_HYBRID_MODE=0                      # Enable classical+PQC hybrid mode

# Memory optimization
PQC_OPTIMIZE_FOR_SIZE=1               # Optimize for code size over speed
PQC_OPTIMIZE_FOR_SPEED=0              # Optimize for speed over size
PQC_MAX_STACK_USAGE=8192              # Maximum stack usage in bytes
PQC_MAX_HEAP_USAGE=16384              # Maximum heap usage in bytes

# Side-channel protection
PQC_ENABLE_SIDE_CHANNEL_PROTECTION=1  # Enable timing attack protection
PQC_ENABLE_POWER_ANALYSIS_PROTECTION=0  # Enable power analysis protection (if supported)
PQC_CONSTANT_TIME_OPERATIONS=1        # Force constant-time implementations

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Vulnerability assessment
PQC_QUANTUM_THREAT_TIMELINE=2035      # Estimated quantum threat timeline
PQC_RISK_ASSESSMENT_MODEL=nist        # nist, conservative, aggressive
PQC_INCLUDE_WEAK_ALGORITHMS=1         # Include analysis of weak algorithms

# Secure operation settings
PQC_SECURE_MEMORY_CLEAR=1             # Clear sensitive memory after operations
PQC_VALIDATE_CRYPTO_IMPLEMENTATIONS=1  # Validate generated crypto implementations
PQC_ENABLE_ENTROPY_CHECKS=1           # Check random number generation quality

# =============================================================================
# DEVELOPMENT AND TESTING
# =============================================================================

# Development mode settings
PQC_DEBUG=0                           # Enable debug mode (verbose logging)
PQC_DEVELOPMENT_MODE=0                # Enable development features
PQC_SKIP_HARDWARE_TESTS=0             # Skip hardware-specific tests

# Testing configuration
PQC_TEST_FIRMWARE_PATH=./tests/fixtures/firmware  # Test firmware directory
PQC_ENABLE_PERFORMANCE_TESTS=1        # Enable performance benchmarking
PQC_ENABLE_INTEGRATION_TESTS=1        # Enable integration tests
PQC_TEST_TIMEOUT=60                   # Test timeout in seconds

# =============================================================================
# EXTERNAL INTEGRATIONS
# =============================================================================

# GitHub integration (for GitHub Actions)
GITHUB_TOKEN=                         # GitHub API token (if using GitHub features)
GITHUB_REPOSITORY=                    # Repository name (auto-detected in Actions)

# Cloud storage (optional)
PQC_S3_BUCKET=                        # AWS S3 bucket for firmware storage
PQC_AZURE_CONTAINER=                  # Azure container for firmware storage
PQC_GCS_BUCKET=                       # Google Cloud Storage bucket

# Notification settings
PQC_SLACK_WEBHOOK_URL=                # Slack webhook for notifications
PQC_TEAMS_WEBHOOK_URL=                # Microsoft Teams webhook
PQC_EMAIL_SMTP_SERVER=                # SMTP server for email notifications
PQC_EMAIL_FROM_ADDRESS=               # From address for email notifications

# =============================================================================
# HARDWARE TESTING CONFIGURATION
# =============================================================================

# Hardware-in-loop testing
PQC_HIL_ENABLED=0                     # Enable hardware-in-loop testing
PQC_HIL_DEVICE_PORT=/dev/ttyUSB0      # Serial port for HIL device
PQC_HIL_DEVICE_BAUD=115200            # Baud rate for HIL communication
PQC_HIL_TIMEOUT=30                    # HIL operation timeout in seconds

# Embedded toolchain paths
ARM_TOOLCHAIN_PATH=/usr/bin           # ARM GCC toolchain path
ESP_IDF_PATH=                         # ESP-IDF path (if using ESP32)
RISCV_TOOLCHAIN_PATH=                 # RISC-V toolchain path
AVR_TOOLCHAIN_PATH=                   # AVR toolchain path

# =============================================================================
# PERFORMANCE AND MONITORING
# =============================================================================

# Performance monitoring
PQC_ENABLE_PROFILING=0                # Enable performance profiling
PQC_PROFILE_OUTPUT_DIR=./profiles     # Profiling output directory
PQC_ENABLE_METRICS_COLLECTION=0       # Enable metrics collection

# Resource limits
PQC_MAX_CONCURRENT_ANALYSES=4         # Maximum concurrent firmware analyses
PQC_MAX_FIRMWARE_SIZE=10485760        # Maximum firmware size in bytes (10MB)
PQC_ANALYSIS_CACHE_SIZE=100           # Number of analysis results to cache

# Telemetry (anonymized usage statistics)
PQC_ENABLE_TELEMETRY=0                # Enable anonymous usage telemetry
PQC_TELEMETRY_ENDPOINT=               # Custom telemetry endpoint

# =============================================================================
# COMPLIANCE AND AUDIT
# =============================================================================

# Compliance reporting
PQC_COMPLIANCE_STANDARDS=nist,fips    # Comma-separated compliance standards
PQC_AUDIT_LOG_ENABLED=0               # Enable detailed audit logging
PQC_AUDIT_LOG_PATH=./audit.log        # Audit log file path

# Report generation
PQC_REPORT_FORMAT=json                # json, xml, pdf, html
PQC_INCLUDE_REMEDIATION_ADVICE=1      # Include fix recommendations in reports
PQC_GENERATE_SBOM=1                   # Generate Software Bill of Materials

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Experimental features (use with caution)
PQC_EXPERIMENTAL_ALGORITHMS=0         # Enable experimental PQC algorithms
PQC_EXPERIMENTAL_OPTIMIZATIONS=0      # Enable experimental optimizations
PQC_ML_ENHANCED_DETECTION=0           # Enable ML-based vulnerability detection

# Custom extensions
PQC_CUSTOM_PLUGINS_DIR=               # Directory for custom plugins
PQC_ENABLE_CUSTOM_ALGORITHMS=0        # Enable custom algorithm implementations

# =============================================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# =============================================================================

# The following variables can be used to override defaults for specific environments:
# - Development: Add _DEV suffix (e.g., PQC_LOG_LEVEL_DEV=DEBUG)
# - Testing: Add _TEST suffix (e.g., PQC_ANALYSIS_TIMEOUT_TEST=60)
# - Production: Add _PROD suffix (e.g., PQC_LOG_LEVEL_PROD=WARNING)